// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using auctionWebApp.persistence;

#nullable disable

namespace auctionWebApp.Migrations
{
    [DbContext(typeof(AuctionDbContext))]
    [Migration("20241015171830_initial2")]
    partial class initial2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("auctionWebApp.persistence.AuctionItemDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("ClosingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("StartingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("AuctionItem");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            ClosingPrice = 0m,
                            Description = "A red bicycle",
                            EndTime = new DateTime(2024, 10, 18, 19, 18, 29, 831, DateTimeKind.Local).AddTicks(4993),
                            IsOpen = true,
                            Name = "Bicycle",
                            StartTime = new DateTime(2024, 10, 15, 19, 18, 29, 831, DateTimeKind.Local).AddTicks(4936),
                            StartingPrice = 100m,
                            UserName = "alexmrty"
                        });
                });

            modelBuilder.Entity("auctionWebApp.persistence.BidDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AuctionItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PlacedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AuctionItemId");

                    b.ToTable("Bid");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Amount = 150m,
                            AuctionItemId = -1,
                            PlacedTime = new DateTime(2024, 10, 15, 19, 18, 29, 831, DateTimeKind.Local).AddTicks(5120),
                            UserName = "alexmrty"
                        },
                        new
                        {
                            Id = -2,
                            Amount = 200m,
                            AuctionItemId = -1,
                            PlacedTime = new DateTime(2024, 10, 15, 19, 18, 29, 831, DateTimeKind.Local).AddTicks(5124),
                            UserName = "anderslm"
                        });
                });

            modelBuilder.Entity("auctionWebApp.persistence.BidDb", b =>
                {
                    b.HasOne("auctionWebApp.persistence.AuctionItemDb", "AuctionItemDb")
                        .WithMany("Bids")
                        .HasForeignKey("AuctionItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuctionItemDb");
                });

            modelBuilder.Entity("auctionWebApp.persistence.AuctionItemDb", b =>
                {
                    b.Navigation("Bids");
                });
#pragma warning restore 612, 618
        }
    }
}
